name: Build CustomVCAM Tweak

on:
  push:
    branches: [ main, develop ]
  pull_request:
    branches: [ main ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout repository
      uses: actions/checkout@v4
      with:
        submodules: recursive
    
    - name: Setup Theos
      run: |
        sudo apt-get update
        sudo apt-get install -y git make perl curl zip unzip python3 wget xz-utils
        
        # Install Theos
        sudo git clone --recursive https://github.com/theos/theos.git /opt/theos
        sudo chown -R $(whoami):$(whoami) /opt/theos
        echo "THEOS=/opt/theos" >> $GITHUB_ENV
        echo "/opt/theos/bin" >> $GITHUB_PATH
        
        # Setup iOS SDK
        cd /opt/theos
        curl -LO https://github.com/theos/sdks/archive/master.zip
        unzip master.zip
        mv sdks-master/* sdks/
        rm -rf sdks-master master.zip
        
        # Create required directories
        mkdir -p toolchain/linux/iphone
    
    - name: Install dependencies
      run: |
        # Install required tools
        sudo apt-get install -y clang llvm build-essential
        
        # Install iOS toolchain (simplified approach)
        cd /opt/theos
        # Try to download pre-built iOS toolchain, fallback to basic setup
        if ! wget -q https://github.com/theos/toolchain/releases/download/linux-iphone-11.1-15.6/iphone-linux-11.1-15.6.tar.xz; then
          echo "Pre-built toolchain not available, using system toolchain"
          mkdir -p toolchain/linux/iphone/bin
          ln -sf /usr/bin/clang toolchain/linux/iphone/bin/clang
          ln -sf /usr/bin/clang++ toolchain/linux/iphone/bin/clang++
        else
          tar -xf iphone-linux-11.1-15.6.tar.xz -C toolchain/linux/
          rm iphone-linux-11.1-15.6.tar.xz
        fi
    
    - name: Build tweak
      run: |
        export THEOS=/opt/theos
        export PATH="/opt/theos/bin:$PATH"
        
        # Set up environment
        export SYSROOT="/opt/theos/sdks/iPhoneOS13.7.sdk"
        export TARGET_CC="clang"
        export TARGET_CXX="clang++"
        
        # Build with verbose output
        make clean || true
        make package FINALPACKAGE=1 DEBUG=0 || make package DEBUG=0
    
    - name: Upload artifact
      uses: actions/upload-artifact@v4
      with:
        name: CustomVCAM-deb
        path: packages/*.deb
    
    - name: Create Release
      if: github.ref == 'refs/heads/main'
      uses: softprops/action-gh-release@v1
      with:
        tag_name: v${{ github.run_number }}
        name: CustomVCAM v${{ github.run_number }}
        files: packages/*.deb
        draft: false
        prerelease: false
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }} 