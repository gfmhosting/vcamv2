name: Build Custom VCAM v2

on:
  push:
    branches: [ main, master ]
  pull_request:
    branches: [ main, master ]
  workflow_dispatch:

jobs:
  build:
    runs-on: ubuntu-latest
    
    steps:
    - name: Checkout Repository
      uses: actions/checkout@v4
      with:
        submodules: true
    
    - name: Setup Theos
      uses: actions/setup-node@v4
      with:
        node-version: '18'
    
    - name: Install Dependencies
      run: |
        sudo apt-get update
        sudo apt-get install -y build-essential git curl wget unzip
        
    - name: Install Theos
      run: |
        sudo git clone --recursive https://github.com/theos/theos.git /opt/theos
        sudo chown -R $USER:$USER /opt/theos
        echo 'export THEOS=/opt/theos' >> ~/.bashrc
        echo 'export PATH=$THEOS/bin:$PATH' >> ~/.bashrc
        source ~/.bashrc
        
    - name: Download iOS 13.7 SDK
      run: |
        export THEOS=/opt/theos
        cd $THEOS
        curl -LO https://github.com/theos/sdks/archive/master.zip
        unzip master.zip
        cp -r sdks-master/iPhoneOS13.7.sdk sdks/
        rm -rf master.zip sdks-master
        
    - name: Setup Build Environment
      run: |
        export THEOS=/opt/theos
        export PATH=$THEOS/bin:$PATH
        which theos || echo "Theos not in PATH"
        ls -la $THEOS/sdks/ || echo "No SDKs directory"
        
    - name: Build Project
      run: |
        export THEOS=/opt/theos
        export PATH=$THEOS/bin:$PATH
        make clean
        make package
        
    - name: Upload Build Artifacts
      uses: actions/upload-artifact@v4
      with:
        name: CustomVCAM-${{ github.sha }}
        path: |
          packages/*.deb
          *.deb
        retention-days: 30
        
    - name: Create Release Assets
      if: github.ref == 'refs/heads/main' || github.ref == 'refs/heads/master'
      run: |
        mkdir -p release
        cp *.deb release/ 2>/dev/null || cp packages/*.deb release/ 2>/dev/null || echo "No .deb files found"
        ls -la release/
        
    - name: Generate Build Info
      run: |
        echo "## Build Information" > BUILD_INFO.md
        echo "- **Commit**: ${{ github.sha }}" >> BUILD_INFO.md
        echo "- **Branch**: ${{ github.ref_name }}" >> BUILD_INFO.md
        echo "- **Build Date**: $(date -u)" >> BUILD_INFO.md
        echo "- **Target Device**: iPhone 7 iOS 13.3.1 A1778" >> BUILD_INFO.md
        echo "- **Jailbreak**: checkra1n compatible" >> BUILD_INFO.md
        echo "" >> BUILD_INFO.md
        echo "## Installation" >> BUILD_INFO.md
        echo "1. Download the .deb file" >> BUILD_INFO.md
        echo "2. Transfer to your jailbroken device" >> BUILD_INFO.md
        echo "3. Install using Filza or dpkg" >> BUILD_INFO.md
        echo "4. Respring device" >> BUILD_INFO.md
        echo "5. Double-tap volume buttons to activate" >> BUILD_INFO.md
        
    - name: Upload Release Info
      uses: actions/upload-artifact@v4
      with:
        name: build-info-${{ github.sha }}
        path: BUILD_INFO.md 